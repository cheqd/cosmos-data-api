###############################################################
###           SECTION 1: General Configuration              ###
###############################################################

# Worker name
name = "data-api"

# Entrypoint/path to the file that will be executed
main = "src/index.ts"

# Date in yyyy-mm-dd to determine which version of Workers runtime to use
# Details: https://developers.cloudflare.com/workers/platform/compatibility-dates/
compatibility_date = "2022-05-24"

# Usage model for the Worker
# Details: https://developers.cloudflare.com/workers/platform/limits
usage_model = "unbound"


###############################################################
###            SECTION 2: Production Environment            ###
###############################################################

# Deploy to NAME.SUBDOMAIN.workers.dev?
# @default `true`
workers_dev = true

# Route to publish the Worker
route = { pattern = "data-api.cheqd.io/*", zone_id = "afe3b66243382f27140e6feeaae848b5" }

# KV Namespaces accessible from the Worker
# Details: https://developers.cloudflare.com/workers/learning/how-kv-works
# @default `[]`

kv_namespaces = [
  { binding = "CIRCULATING_SUPPLY_WATCHLIST", id = "a9bc7aaa54ee4394ae6b9abe43e05ad6", preview_id = "e0229bd428de4499b8a28729c2892a4e" }, { binding = "ACTIVE_VALIDATORS", id = "02a25d1f74f44e22ab3ee7c290c4b8e0",  preview_id = "ba46538120c645bd9b2056edd95ba250" }, { binding = "TOTAL_DELEGATORS", id = "cdb09a8a4c374c5a85b4f532da27fbde",  preview_id = "b1fed5728cb04b2d9008aa38065d19eb" }
]

# Map of environment variables to set when deploying the Worker
# Not inherited. @default `{}`
[vars]
# Token lowest denom exponent. 1 CHEQ = 10^9 ncheq
TOKEN_EXPONENT = "9"
# Standard Cosmosd SDK REST API endpoint for a node on target network
REST_API = "https://api.cheqd.net"
# REST API pagination limit
REST_API_PAGINATION_LIMIT = "50"
# GraphQL API endpoint for target network. Must be sourced from a BigDipper instance.
GRAPHQL_API = "https://explorer-gql.cheqd.io/v1/graphql"
# Number of groups circulating supply watchlist is split into
CIRCULATING_SUPPLY_GROUPS = "4"
# Number of groups active validators are split into
ACTIVE_VALIDATOR_GROUPS = "10"
# Moniter market API base url
MARKET_MONITORING_API = "https://market-monitoring.cheqd.net"

# The necessary secrets are:
# - WEBHOOK_URL
# Run `echo <VALUE> | wrangler secret put <NAME>` for each of these

[triggers]
crons = ["0 * * * *"]

###############################################################
###             SECTION 3: Local Development                ###
###############################################################

# Configuration options for local development via Wrangler
[dev]
# IP address for the local dev server to listen on
# @default `localhost`
ip = "localhost"
# Port for the local dev server to listen on
# @default `8787`
port = 8787
# Protocol that local wrangler dev server listens to requests on
# @default `http`
local_protocol = "http"


###############################################################
###             SECTION 4: Staging Environment              ###
###############################################################

[env.staging]
# Deploy to NAME.SUBDOMAIN.workers.dev?
# @default `true`
workers_dev = true

# Route to publish the Worker
route = { pattern = "data-api-staging.cheqd.io/*", zone_id = "afe3b66243382f27140e6feeaae848b5" }

# Map of environment variables to set when deploying the Worker
# Not inherited. @default `{}`
vars = { ENVIRONMENT = "staging", TOKEN_EXPONENT = "9", REST_API = "https://api.cheqd.net", GRAPHQL_API = "https://explorer-gql.cheqd.io/v1/graphql", CIRCULATING_SUPPLY_GROUPS = "4", MARKET_MONITORING_API = "https://market-monitoring-staging.cheqd.net", ACTIVE_VALIDATOR_GROUPS = "10"}

# The necessary secrets are:
# - WEBHOOK_URL
# Run `echo <VALUE> | wrangler secret put <NAME>` for each of these

# KV Namespaces accessible from the Worker
# Details: https://developers.cloudflare.com/workers/learning/how-kv-works
# @default `[]`

kv_namespaces = [
  { binding = "CIRCULATING_SUPPLY_WATCHLIST", id = "86891d184f7f40ee9b403a94a76fcdab", preview_id = "7330320a78374dab87176419c89e7dcd" }, { binding = "ACTIVE_VALIDATORS", id = "7270ce2a9275432386e59102ee8638b1", preview_id = "5fbc36f8c3c3463586046034bb52117d" }, { binding = "TOTAL_DELEGATORS", id = "596aa5f4f43a4737957a030a2d73a8ac", preview_id = "94ed81cdb6a444d9923a9fc7497930cc" }
]

# Cron triggers for staging worker
[env.staging.triggers]
crons = ["0 * * * *"]

###############################################################
###               OPTIONAL: Build Configuration             ###
###############################################################

# NOTE: THIS IS A TOP-LEVEL CONFIGURATION AND NEEDS TO BE MOVED IF USED
# Optional custom build step when using Wrangler CLI for build
# Details: https://developers.cloudflare.com/workers/wrangler/custom-builds/
# @default {}
# [build]
#   # Custom build command. On Linux and macOS, the command is executed in
#   # the `sh` shell and the `cmd` shell for Windows.
#   # The `&&` and `||` shell operators may be used.
#   command = ""
#   # The directory in which the command is executed.
#   cwd = "./src"
#   # The directory to watch for changes while using `wrangler dev`,
#   # defaults to the current working directory
#   watch_dir = ""

# List of data files that the Worker should be bound to. This is
# the legacy way of binding to a data file. ES module Workers should
# do proper module imports.
#[data_blobs]
# DATA = ""

# Minify before uploading?
# minify = "false"

# Add polyfills for node builtin modules and globals?
# node_compat = "false"
